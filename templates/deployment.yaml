apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rq-worker.fullname" . }}-rq-worker
  labels:
    {{- include "rq-worker.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.rqWorker.replicas }}
  selector:
    matchLabels:
      app: rq-worker
      {{- include "rq-worker.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: rq-worker
        {{- include "rq-worker.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: worker
        image: {{ .Values.rqWorker.worker.image.repository }}:{{ .Values.rqWorker.worker.image.tag | default .Chart.AppVersion }}
        env:
        - name: REDIS_HOST
          value: {{ .Values.rqWorker.worker.env.redisHost | quote }}
        - name: REDIS_PORT
          value: {{ .Values.rqWorker.worker.env.redisPort | quote }}
        - name: REDIS_USERNAME
          value: {{ .Values.rqWorker.worker.env.redisUsername | quote }}
        {{- if .Values.rqWorker.worker.env.redisPasswordSecret }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.rqWorker.worker.env.redisPasswordSecret.name }}
              key: {{ .Values.rqWorker.worker.env.redisPasswordSecret.key }}
        {{- end }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        resources: {}
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "rq info --url redis://$REDIS_HOST:$REDIS_PORT"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "rq info --url redis://$REDIS_HOST:$REDIS_PORT"
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3